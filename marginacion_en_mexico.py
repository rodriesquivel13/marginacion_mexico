# -*- coding: utf-8 -*-
"""marginacion_en_mexico.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CCQUR38H8YuyPG0z5ZD-FnG-HBqdFaep
"""

import pandas as pd
import matplotlib.pyplot as plt

marginacion = pd.read_csv('marginacion.csv',encoding='latin-1')
marginacion.head()

maximo = marginacion['IMN_2020'].max()

# Obtener el valor mínimo
minimo = marginacion['IMN_2020'].min()

# Obtener la media
media = marginacion['IMN_2020'].mean()

# Imprimir los resultados
print("Máximo:", maximo)
print("Mínimo:", minimo)
print("Media:", media)

municipios_por_estado = marginacion.groupby(['NOM_ENT', 'GM_2020']).size().unstack()

# Calcular el porcentaje de municipios por estado y categoría de marginación
porcentaje_municipios = municipios_por_estado.div(municipios_por_estado.sum(axis=1), axis=0) * 100

# Crear la gráfica de barras
porcentaje_municipios.plot(kind='bar', stacked=True, figsize=(10, 6))

# Configurar etiquetas y título
plt.xlabel('Estado')
plt.ylabel('Porcentaje de municipios')
plt.title('Porcentaje de municipios por estado con índices de marginación')

# Mostrar la leyenda
plt.legend(title='Índice de marginación')

# Guardar la gráfica en un archivo PNG
plt.savefig('grafica_marginacion.png')




# Convertir la columna "POB_TOT" a tipo numérico
marginacion["POB_TOT"] = pd.to_numeric(marginacion["POB_TOT"], errors="coerce")

# Contar el número de personas por estado y tipo de índice de marginación
personas_por_estado = marginacion.groupby(["NOM_ENT", "GM_2020"])["POB_TOT"].sum().unstack()

# Graficar los resultados
personas_por_estado.plot(kind="bar", stacked=True, figsize=(10, 6))

# Configurar etiquetas y título
plt.xlabel("Estado")
plt.ylabel("Número de Personas")
plt.title("Número de Personas por Estado y Tipo de Índice de Marginación")

# Mostrar la leyenda
plt.legend(title="Tipo de Índice de Marginación")
# Mostrar la gráfica
plt.show()
# Obtener las columnas relevantes
analfabetismo = marginacion["ANALF"]
poblacion_5000 = marginacion["PL.5000"]

# Graficar el diagrama de dispersión
plt.scatter(poblacion_5000, analfabetismo)

# Configurar etiquetas y título
plt.xlabel("Porcentaje de Población en Localidades < 5,000 habitantes")
plt.ylabel("Porcentaje de Analfabetismo")
plt.title("Relación entre Analfabetismo y Población en Localidades < 5,000 habitantes")

# Mostrar la gráfica
plt.show()